// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int>("EmployeeDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobRoleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobRoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Models.Entities.EmployeeDetails", b =>
                {
                    b.Property<int>("EmployeeDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.HasKey("EmployeeDetailsId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("Models.Entities.JobRole", b =>
                {
                    b.Property<int>("JobRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobRoleId"), 1L, 1);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobRoleId");

                    b.ToTable("JobRoles");

                    b.HasData(
                        new
                        {
                            JobRoleId = 1,
                            JobTitle = "CEO"
                        },
                        new
                        {
                            JobRoleId = 2,
                            JobTitle = "CTO"
                        },
                        new
                        {
                            JobRoleId = 3,
                            JobTitle = "C3PO"
                        },
                        new
                        {
                            JobRoleId = 4,
                            JobTitle = "Manager"
                        },
                        new
                        {
                            JobRoleId = 5,
                            JobTitle = "Supervisor"
                        },
                        new
                        {
                            JobRoleId = 6,
                            JobTitle = "Contracted"
                        },
                        new
                        {
                            JobRoleId = 7,
                            JobTitle = "In House"
                        },
                        new
                        {
                            JobRoleId = 8,
                            JobTitle = "Associate"
                        },
                        new
                        {
                            JobRoleId = 9,
                            JobTitle = "Nobody"
                        });
                });

            modelBuilder.Entity("Models.Entities.Employee", b =>
                {
                    b.HasOne("Models.Entities.JobRole", "JobRole")
                        .WithMany("Employees")
                        .HasForeignKey("JobRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobRole");
                });

            modelBuilder.Entity("Models.Entities.EmployeeDetails", b =>
                {
                    b.HasOne("Models.Entities.Employee", "Employee")
                        .WithOne("ContactDetails")
                        .HasForeignKey("Models.Entities.EmployeeDetails", "EmployeeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Models.Entities.Employee", b =>
                {
                    b.Navigation("ContactDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Entities.JobRole", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
